#include "../Pid.h"
#include <stdio.h>

#define NUMBER_OF_POINTS 300
float SinusArray[NUMBER_OF_POINTS] =
{
        0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,
        250,250,250,250,250,250,250,250,250,250, 250,250,250,250,250,250,250,250,250,250, 250,250,250,250,250,250,250,250,250,250,
        250,250,250,250,250,250,250,250,250,250, 250,250,250,250,250,250,250,250,250,250, 250,250,250,250,250,250,250,250,250,250,
        250,250,250,250,250,250,250,250,250,250,

        512,512,512,512,512,512,512,512,512,512, 512,512,512,512,512,512,512,512,512,512, 512,512,512,512,512,512,512,512,512,512,
        512,512,512,512,512,512,512,512,512,512, 512,512,512,512,512,512,512,512,512,512, 512,512,512,512,512,512,512,512,512,512,
        0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,

        -512,-512,-512,-512,-512,-512,-512,-512,-512,-512, -512,-512,-512,-512,-512,-512,-512,-512,-512,-512, -512,-512,-512,-512,-512,-512,-512,-512,-512,-512,
        -512,-512,-512,-512,-512,-512,-512,-512,-512,-512, -512,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,-512,
        0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,
};

int main()
{
    int it = 0;
    int Running = 1;
    float output = 0;
    float Input;
    Pid myPid(4.0, -1023, 1023);
  //  myPid.SetParameters(0.4, 0.250, 0.10);
   // myPid.SetParameters(0.3, 0.250, 0.0);
    myPid.SetParameters(0.3, 0.3, 0.2);
    while(Running)
    {
        Input = myPid.GetOutput();
        myPid.SetSetpoint(SinusArray[it + 1]);
        output = myPid.Handler(Input);
        Pid::IntermediateOutputsType Interm = myPid.GetIntermediateOutputs();
        printf("%d, %f, %f, %f, %f, %f\n", it, SinusArray[it + 1], output, Interm.KpOutput, Interm.KiOutput, Interm.KdOutput);
        if(it < NUMBER_OF_POINTS - 1)
        {
            it++;
        }
        else
        {
            it = 0;
            Running = 0;
        }
    }

    return 0;
}
